name: C/C++ CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs: 
  build:

    runs-on: ${{matrix.os}}
    strategy:
      matrix:
#         os: [ubuntu-latest, windows-latest]
#         platform: [linux, windows]
        include:
          - os: ubuntu-latest
            platform: linux
            arch: 
          - os: windows-latest
            platform: MSVC
            arch: win64_msvc2019_64
      
    steps:
    - uses: actions/checkout@v2
    - name: Install Qt
      uses: jurplel/install-qt-action@v2.8.0
      with:
        # Directory to install Qt
        dir:  # optional
        # Version of Qt to install
        version:  5.12.9 # optional, default is 5.12.9
        # Host platform
        host: ${{matrix.platform}}
        # Target platform for build
        target: desktop # optional, default is desktop
        # Architecture for Windows/Android
        arch: ${{matrix.arch}} # optional
        # Whether or not to install Qt dependencies on Linux
        install-deps: true # optional, default is true
        # Additional Qt modules to install
        modules: qtcharts # optional
        # Force a Qt mirror in case the default is not working
        mirror:  # optional
        # Whether or not to actually download Qt
        cached:  # optional, default is false
        # Version of aqtinstall to use in case of issues
        aqtversion:  # optional, default is ==0.9.4
        # Version of py7zr to use in case of issues
        py7zrversion: # optional, default is ==0.9.1
        # Any extra arguments to append to the back
        extra: # optional
    - name: Prepare build directory
      run: mkdir build && cd build && cmake .. -DCMAKE_BUILD_TYPE=Release  && make
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.1.4
      with:
        # Artifact name
        name: qtconciuos # optional, default is artifact
        # A file, directory or wildcard pattern that describes what to upload
        path: build/qtconcious
        # The desired behavior if no files are found using the provided path.
#     - name: Configure CMake
#       working-directory: $GITHUB_WORKSPACE/build
#       run: cmake .. -DCMAKE_BUILD_TYPE=Release
#     - name: Compile
#       working-directory: $GITHUB_WORKSPACE/build
#       run: make
